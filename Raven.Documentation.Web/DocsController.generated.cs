// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Raven.Documentation.Web.Controllers
{
    public partial class DocsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DocsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Search()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Validate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Validate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ValidateMappings()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateMappings);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Generate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Generate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Welcome()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Welcome);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Client()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Client);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Server()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Server);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UsersIssues()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UsersIssues);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Glossary()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Glossary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Samples()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Samples);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FileSystem()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileSystem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Articles()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Articles);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DocsController Actions { get { return MVC.Docs; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Docs";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Docs";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Search = "Search";
            public readonly string Validate = "Validate";
            public readonly string ValidateMappings = "ValidateMappings";
            public readonly string Generate = "Generate";
            public readonly string Welcome = "Welcome";
            public readonly string Index = "Index";
            public readonly string Client = "Client";
            public readonly string Server = "Server";
            public readonly string UsersIssues = "UsersIssues";
            public readonly string Glossary = "Glossary";
            public readonly string Samples = "Samples";
            public readonly string FileSystem = "FileSystem";
            public readonly string Articles = "Articles";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Search = "Search";
            public const string Validate = "Validate";
            public const string ValidateMappings = "ValidateMappings";
            public const string Generate = "Generate";
            public const string Welcome = "Welcome";
            public const string Index = "Index";
            public const string Client = "Client";
            public const string Server = "Server";
            public const string UsersIssues = "UsersIssues";
            public const string Glossary = "Glossary";
            public const string Samples = "Samples";
            public const string FileSystem = "FileSystem";
            public const string Articles = "Articles";
        }


        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string value = "value";
        }
        static readonly ActionParamsClass_Validate s_params_Validate = new ActionParamsClass_Validate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Validate ValidateParams { get { return s_params_Validate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Validate
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string all = "all";
        }
        static readonly ActionParamsClass_ValidateMappings s_params_ValidateMappings = new ActionParamsClass_ValidateMappings();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ValidateMappings ValidateMappingsParams { get { return s_params_ValidateMappings; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ValidateMappings
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string all = "all";
        }
        static readonly ActionParamsClass_Generate s_params_Generate = new ActionParamsClass_Generate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Generate GenerateParams { get { return s_params_Generate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Generate
        {
            public readonly string language = "language";
            public readonly string version = "version";
            public readonly string key = "key";
            public readonly string all = "all";
        }
        static readonly ActionParamsClass_Welcome s_params_Welcome = new ActionParamsClass_Welcome();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Welcome WelcomeParams { get { return s_params_Welcome; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Welcome
        {
            public readonly string language = "language";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string language = "language";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_Client s_params_Client = new ActionParamsClass_Client();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Client ClientParams { get { return s_params_Client; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Client
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_Server s_params_Server = new ActionParamsClass_Server();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Server ServerParams { get { return s_params_Server; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Server
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_UsersIssues s_params_UsersIssues = new ActionParamsClass_UsersIssues();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UsersIssues UsersIssuesParams { get { return s_params_UsersIssues; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UsersIssues
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_Glossary s_params_Glossary = new ActionParamsClass_Glossary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Glossary GlossaryParams { get { return s_params_Glossary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Glossary
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_Samples s_params_Samples = new ActionParamsClass_Samples();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Samples SamplesParams { get { return s_params_Samples; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Samples
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_FileSystem s_params_FileSystem = new ActionParamsClass_FileSystem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FileSystem FileSystemParams { get { return s_params_FileSystem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FileSystem
        {
            public readonly string version = "version";
            public readonly string language = "language";
        }
        static readonly ActionParamsClass_Articles s_params_Articles = new ActionParamsClass_Articles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Articles ArticlesParams { get { return s_params_Articles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Articles
        {
            public readonly string version = "version";
            public readonly string language = "language";
            public readonly string key = "key";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Article = "Article";
                public readonly string Client = "Client";
                public readonly string FileSystem = "FileSystem";
                public readonly string Glossary = "Glossary";
                public readonly string Indexes = "Indexes";
                public readonly string NotDocumented = "NotDocumented";
                public readonly string NotFound = "NotFound";
                public readonly string Samples = "Samples";
                public readonly string Search = "Search";
                public readonly string Server = "Server";
                public readonly string Start = "Start";
                public readonly string Studio = "Studio";
                public readonly string Transformers = "Transformers";
                public readonly string Validate = "Validate";
                public readonly string ValidateMappings = "ValidateMappings";
                public readonly string Welcome = "Welcome";
            }
            public readonly string Article = "~/Views/Docs/Article.cshtml";
            public readonly string Client = "~/Views/Docs/Client.cshtml";
            public readonly string FileSystem = "~/Views/Docs/FileSystem.cshtml";
            public readonly string Glossary = "~/Views/Docs/Glossary.cshtml";
            public readonly string Indexes = "~/Views/Docs/Indexes.cshtml";
            public readonly string NotDocumented = "~/Views/Docs/NotDocumented.cshtml";
            public readonly string NotFound = "~/Views/Docs/NotFound.cshtml";
            public readonly string Samples = "~/Views/Docs/Samples.cshtml";
            public readonly string Search = "~/Views/Docs/Search.cshtml";
            public readonly string Server = "~/Views/Docs/Server.cshtml";
            public readonly string Start = "~/Views/Docs/Start.cshtml";
            public readonly string Studio = "~/Views/Docs/Studio.cshtml";
            public readonly string Transformers = "~/Views/Docs/Transformers.cshtml";
            public readonly string Validate = "~/Views/Docs/Validate.cshtml";
            public readonly string ValidateMappings = "~/Views/Docs/ValidateMappings.cshtml";
            public readonly string Welcome = "~/Views/Docs/Welcome.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DocsController : Raven.Documentation.Web.Controllers.DocsController
    {
        public T4MVC_DocsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, string value);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(string language, string version, string value)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            SearchOverride(callInfo, language, version, value);
            return callInfo;
        }

        [NonAction]
        partial void ValidateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult Validate(string language, string version, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Validate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            ValidateOverride(callInfo, language, version, all);
            return callInfo;
        }

        [NonAction]
        partial void ValidateMappingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult ValidateMappings(string language, string version, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ValidateMappings);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            ValidateMappingsOverride(callInfo, language, version, all);
            return callInfo;
        }

        [NonAction]
        partial void GenerateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version, string key, bool all);

        [NonAction]
        public override System.Web.Mvc.ActionResult Generate(string language, string version, string key, bool all)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Generate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "all", all);
            GenerateOverride(callInfo, language, version, key, all);
            return callInfo;
        }

        [NonAction]
        partial void WelcomeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult Welcome(string language, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Welcome);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            WelcomeOverride(callInfo, language, version);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string language, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string language, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            IndexOverride(callInfo, language, version);
            return callInfo;
        }

        [NonAction]
        partial void ClientOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Client(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Client);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ClientOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void ServerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Server(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Server);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ServerOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void UsersIssuesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult UsersIssues(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UsersIssues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            UsersIssuesOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void GlossaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Glossary(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Glossary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            GlossaryOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void SamplesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult Samples(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Samples);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            SamplesOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void FileSystemOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language);

        [NonAction]
        public override System.Web.Mvc.ActionResult FileSystem(string version, string language)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FileSystem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            FileSystemOverride(callInfo, version, language);
            return callInfo;
        }

        [NonAction]
        partial void ArticlesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string version, string language, string key);

        [NonAction]
        public override System.Web.Mvc.ActionResult Articles(string version, string language, string key)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Articles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "language", language);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ArticlesOverride(callInfo, version, language, key);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
